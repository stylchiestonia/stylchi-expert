{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, REQUEST_USER_PROFILE, FETCH_CATEGORIES_SUCCESS, CREATE_SERVICE_EXPERT, FETCH_SERVICES_SUCCESS, FETCH_SERVICES_REQUEST, DELETE_SERVICE_EXPERT, UPDATE_SERVICE_EXPERT } from \"./types\";\naxios.defaults.headers.common = {\n  'Authorization': 'JWT ' + localStorage.jwtToken\n};\nexport var getCategories = function getCategories() {\n  return function (dispatch) {\n    axios.get(\"/categories\").then(function (res) {\n      dispatch({\n        type: FETCH_CATEGORIES_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var createExpertService = function createExpertService(servicedata) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SERVICES_REQUEST\n    });\n    axios.post(\"/expert/service/create\", servicedata).then(function (res) {\n      dispatch({\n        type: CREATE_SERVICE_EXPERT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var deleteExpertService = function deleteExpertService(archive_service) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SERVICES_REQUEST\n    });\n    axios.post(\"/expert/service/delete\", archive_service).then(function (res) {\n      dispatch({\n        type: DELETE_SERVICE_EXPERT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var updateExpertService = function updateExpertService(updatedService) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SERVICES_REQUEST\n    });\n    axios.post(\"/expert/service/update\", updatedService).then(function (res) {\n      dispatch({\n        type: UPDATE_SERVICE_EXPERT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var getExpertServices = function getExpertServices() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SERVICES_REQUEST\n    });\n    axios.post(\"/expert/services\").then(function (res) {\n      dispatch({\n        type: FETCH_SERVICES_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/actions/serviceActions.js"],"names":["axios","GET_ERRORS","REQUEST_USER_PROFILE","FETCH_CATEGORIES_SUCCESS","CREATE_SERVICE_EXPERT","FETCH_SERVICES_SUCCESS","FETCH_SERVICES_REQUEST","DELETE_SERVICE_EXPERT","UPDATE_SERVICE_EXPERT","defaults","headers","common","localStorage","jwtToken","getCategories","dispatch","get","then","res","type","payload","data","catch","err","createExpertService","servicedata","post","deleteExpertService","archive_service","updateExpertService","updatedService","getExpertServices"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { GET_ERRORS,REQUEST_USER_PROFILE, FETCH_CATEGORIES_SUCCESS, CREATE_SERVICE_EXPERT, FETCH_SERVICES_SUCCESS, FETCH_SERVICES_REQUEST, DELETE_SERVICE_EXPERT, UPDATE_SERVICE_EXPERT} from \"./types\";\n\naxios.defaults.headers.common = {\n    'Authorization': 'JWT ' + localStorage.jwtToken\n  };\nexport const getCategories = () => dispatch => {\n    axios\n      .get(\"/categories\")\n      .then(res => {\n        dispatch({\n            type: FETCH_CATEGORIES_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err\n      })\n      );\n  };\n\n\n  export const createExpertService = servicedata => dispatch => {\n    dispatch({\n      type:FETCH_SERVICES_REQUEST\n    })\n    axios\n      .post(\"/expert/service/create\", servicedata )\n      .then(res => {\n        dispatch({\n            type: CREATE_SERVICE_EXPERT,\n            payload: res.data\n        });\n      }).catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err\n      }))\n  };\n\n  export const deleteExpertService = archive_service => dispatch => {\n    dispatch({\n      type:FETCH_SERVICES_REQUEST\n    })\n    axios\n      .post(\"/expert/service/delete\", archive_service)\n      .then(res => {\n        dispatch({\n            type: DELETE_SERVICE_EXPERT,\n            payload: res.data\n        });\n      }).catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n  export const updateExpertService = updatedService => dispatch => {\n    dispatch({\n      type:FETCH_SERVICES_REQUEST\n    })\n    axios\n      .post(\"/expert/service/update\", updatedService )\n      .then(res => {\n        dispatch({\n            type: UPDATE_SERVICE_EXPERT,\n            payload: res.data\n        });\n      }).catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err\n        })\n      );\n  };\n\n  export const getExpertServices = () => dispatch => {\n    dispatch({\n      type:FETCH_SERVICES_REQUEST\n    })\n    axios\n      .post(\"/expert/services\")\n      .then(res => {\n        dispatch({\n            type: FETCH_SERVICES_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err\n      })\n      );\n  };"]},"metadata":{},"sourceType":"module"}