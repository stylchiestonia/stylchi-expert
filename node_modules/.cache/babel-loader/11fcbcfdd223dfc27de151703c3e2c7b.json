{"ast":null,"code":"import _classCallCheck from \"/Users/mahnoorfatima/Documents/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mahnoorfatima/Documents/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mahnoorfatima/Documents/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/mahnoorfatima/Documents/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/mahnoorfatima/Documents/admin/src/components/Navbars/AdminNavbar.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport { logoutUser } from \"actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\"; // reactstrap components\n\nimport { Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Input, NavbarBrand, Navbar, NavLink, Nav, Container, Modal } from \"reactstrap\";\n\nvar AdminNavbar = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdminNavbar, _React$Component);\n\n  var _super = _createSuper(AdminNavbar);\n\n  function AdminNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AdminNavbar);\n\n    _this = _super.call(this, props);\n\n    _this.updateColor = function () {\n      if (window.innerWidth < 993 && _this.state.collapseOpen) {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      } else {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    _this.toggleCollapse = function () {\n      if (_this.state.collapseOpen) {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      } else {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      }\n\n      _this.setState({\n        collapseOpen: !_this.state.collapseOpen\n      });\n    };\n\n    _this.toggleModalSearch = function () {\n      _this.setState({\n        modalSearch: !_this.state.modalSearch\n      });\n    };\n\n    _this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n    return _this;\n  }\n\n  _createClass(AdminNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateColor);\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n        className: \"navbar-main navbar-transparent headroom\",\n        expand: \"lg\",\n        id: \"navbar-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavbarBrand, {\n        href: \"#pablo\",\n        to: \"/\",\n        tag: Link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"...\",\n        src: require(\"assets/img/brand/stylchi-logo.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"button\", {\n        \"aria-expanded\": false,\n        \"aria-label\": \"Toggle navigation\",\n        className: \"navbar-toggler\",\n        \"data-target\": \"#navigation\",\n        \"data-toggle\": \"collapse\",\n        id: \"navigation\",\n        type: \"button\",\n        onClick: this.toggleCollapse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        navbar: true,\n        isOpen: this.state.collapseOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        nav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"default\",\n        \"data-toggle\": \"dropdown\",\n        nav: true,\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"...\",\n        src: require(\"assets/img/anime3.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"b\", {\n        className: \"caret d-none d-lg-block d-xl-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"d-lg-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, \"Settings\")), /*#__PURE__*/React.createElement(DropdownMenu, {\n        className: \"dropdown-navbar\",\n        right: true,\n        tag: \"ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        tag: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        className: \"nav-item\",\n        onClick: this.props.logoutUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }\n      }, \"Log out\")))), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"separator d-lg-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }))))), /*#__PURE__*/React.createElement(Modal, {\n        modalClassName: \"modal-search\",\n        isOpen: this.state.modalSearch,\n        toggle: this.toggleModalSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"inlineFormInputGroup\",\n        placeholder: \"SEARCH\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: this.toggleModalSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return AdminNavbar;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(AdminNavbar);","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/components/Navbars/AdminNavbar.js"],"names":["React","logoutUser","connect","Link","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Input","NavbarBrand","Navbar","NavLink","Nav","Container","Modal","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","removeEventListener","require","e","preventDefault","Component","mapStateToProps","auth","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport { logoutUser } from \"actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n         className=\"navbar-main navbar-transparent headroom\"\n         expand=\"lg\"\n         id=\"navbar-main\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <NavbarBrand href=\"#pablo\" to=\"/\" tag={Link}>\n              <img\n                  alt=\"...\"\n                  src={require(\"assets/img/brand/stylchi-logo.png\")}\n                />\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n             <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Settings</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\"\n                      onClick={this.props.logoutUser}\n                      >Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(AdminNavbar);\n"]},"metadata":{},"sourceType":"module"}