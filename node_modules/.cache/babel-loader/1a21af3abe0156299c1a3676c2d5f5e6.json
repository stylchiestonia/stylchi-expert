{"ast":null,"code":"var _jsxFileName = \"/Users/mahnoorfatima/Documents/admin/src/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nimport HomeLayout from \"layouts/Home/Home.js\";\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport AuthLayout from \"layouts/Auth/Auth.js\";\nimport \"assets/scss/black-dashboard-react.scss\";\nvar hist = createBrowserHistory();\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  var token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  var decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  var currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  history: hist,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"App\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/admin\",\n  render: function render(props) {\n    return /*#__PURE__*/React.createElement(AdminLayout, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/landing\",\n  render: function render(props) {\n    return /*#__PURE__*/React.createElement(HomeLayout, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 47\n      }\n    }));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/auth\",\n  render: function render(props) {\n    return /*#__PURE__*/React.createElement(AuthLayout, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 44\n      }\n    }));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Redirect, {\n  from: \"/\",\n  to: \"/admin\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n})))), \", document.getElementById(\\\"root\\\")\"));","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/index.js"],"names":["React","ReactDOM","createBrowserHistory","Router","Route","Switch","Redirect","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Provider","store","HomeLayout","AdminLayout","AuthLayout","hist","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","render","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,qBAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,wCAAP;AAGA,IAAMC,IAAI,GAAGd,oBAAoB,EAAjC;;AACA,IAAIe,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,MAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAV,EAAAA,YAAY,CAACW,KAAD,CAAZ,CAHyB,CAIzB;;AACA,MAAMC,OAAO,GAAGb,UAAU,CAACY,KAAD,CAA1B,CALyB,CAMzB;;AACAP,EAAAA,KAAK,CAACS,QAAN,CAAeZ,cAAc,CAACW,OAAD,CAA7B,EAPyB,CAQzB;;AACA,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAV,IAAAA,KAAK,CAACS,QAAN,CAAeX,UAAU,EAAzB,EAF6B,CAI7B;;AACAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;;AACD3B,QAAQ,CAAC4B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEjB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,MAAM,EAAE,gBAAAc,KAAK;AAAA,wBAAI,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,MAAM,EAAE,gBAAAA,KAAK;AAAA,wBAAI,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,MAAM,EAAE,gBAAAA,KAAK;AAAA,wBAAI,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,eAIE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC,GAAf;AAAmB,EAAA,EAAE,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADA,CADA,wCADF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\nimport HomeLayout from \"layouts/Home/Home.js\";\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport AuthLayout from \"layouts/Auth/Auth.js\";\nimport \"assets/scss/black-dashboard-react.scss\";\n\n\nconst hist = createBrowserHistory();\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nReactDOM.render(\n  <Provider store={store}>\n  <Router history={hist}>\n  <div className=\"App\">\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Route path=\"/landing\" render={props => <HomeLayout {...props} />} />\n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin\" />\n    </Switch>\n    </div>\n  </Router>,\n  document.getElementById(\"root\")\n  </Provider>\n);\n"]},"metadata":{},"sourceType":"module"}