{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/register\", userData).then(function (res) {\n      return history.push(\"/thank-you\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/expert/login\", userData).then(function (res) {\n        var token = res.data.token;\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthToken(token);\n        var decoded = jwt_decode(token);\n        localStorage.setItem(\"userId\", decoded.id);\n        localStorage.setItem(\"userRole\", decoded.role);\n        localStorage.setItem(\"userEmail\", decoded.email);\n        dispatch(setCurrentUser(decoded));\n      }).catch(function (err) {\n        return dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"userEmail\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","Promise","resolve","reject","token","localStorage","setItem","decoded","id","role","email","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA0D,SAA1D;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC7DT,IAAAA,KAAK,CACFU,IADH,CACQ,WADR,EACqBH,QADrB,EAEGI,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPJ,OAAO,CAACK,IAAR,CAAa,YAAb,CADO;AAAA,KAFX,EAGgCC,KAHhC,CAGsC,UAAAC,GAAG;AAAA,aACrCN,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEb,UADC;AAEPc,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CAD6B;AAAA,KAHzC;AASD,GAV2B;AAAA,CAArB,C,CAWP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAb,QAAQ;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC/C,WAAO,IAAIY,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,MAAAA,KAAK,CACJU,IADD,CACM,eADN,EACuBH,QADvB,EAECI,IAFD,CAEM,UAAAC,GAAG,EAAI;AAAA,YACHY,KADG,GACOZ,GAAG,CAACO,IADX,CACHK,KADG;AAEXC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAvB,QAAAA,YAAY,CAACuB,KAAD,CAAZ;AACA,YAAMG,OAAO,GAAGzB,UAAU,CAACsB,KAAD,CAA1B;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,OAAO,CAACC,EAAvC;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,OAAO,CAACE,IAAzC;AACAJ,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,OAAO,CAACG,KAA1C;AACArB,QAAAA,QAAQ,CAACsB,cAAc,CAACJ,OAAD,CAAf,CAAR;AACD,OAXD,EAYCb,KAZD,CAYO,UAAAC,GAAG;AAAA,eACRN,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEb,UADC;AAEPc,UAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,SAAD,CADA;AAAA,OAZV;AAkBH,KAnBQ,CAAP;AAoBD,GArBgC;AAAA,CAA1B,C,CAuBP;;AACA,OAAO,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,OAAO,EAAI;AACvC,SAAO;AACLX,IAAAA,IAAI,EAAEZ,gBADD;AAELa,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,SAAO;AACLhB,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,IAAM4B,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAxB,QAAQ,EAAI;AAC1CgB,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,QAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAjC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,IAAAA,QAAQ,CAACsB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAPyB;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING} from \"./types\";\n\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/register\", userData)\n    .then(res => \n      history.push(\"/thank-you\")).catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  return new Promise((resolve, reject) => {\n    axios\n    .post(\"/expert/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      localStorage.setItem(\"userId\", decoded.id);\n      localStorage.setItem(\"userRole\", decoded.role);\n      localStorage.setItem(\"userEmail\", decoded.email);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n});\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"userRole\");\n  localStorage.removeItem(\"userEmail\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}