{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, REQUEST_USER_PROFILE, FETCH_BANK_SUCCESS, FETCH_USER_SUCCESS, FETCH_SCEHDUALE_SUCCESS, FETCH_Gallery_SUCCESS } from \"./types\";\naxios.defaults.headers.common = {\n  'Authorization': 'JWT ' + localStorage.jwtToken\n};\nexport var getCurrentExpert = function getCurrentExpert(user) {\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_USER_PROFILE\n    });\n    axios.post(\"/current\", user).then(function (res) {\n      dispatch({\n        type: FETCH_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var updateCurrentExpert = function updateCurrentExpert(currentUser) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      axios.post(\"current/update\", currentUser).then(function (res) {\n        dispatch({\n          type: FETCH_USER_SUCCESS,\n          payload: res.data\n        });\n        resolve(res);\n      }).catch(function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n        reject(err);\n      });\n    });\n  };\n};\nexport var getExpertScheduale = function getExpertScheduale(expert) {\n  return function (dispatch) {\n    axios.post(\"expert/scheduale\", expert).then(function (res) {\n      dispatch({\n        type: FETCH_SCEHDUALE_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var updateExpertScheduale = function updateExpertScheduale(scheduale) {\n  return function (dispatch) {\n    axios.post(\"expert/scheduale/update\", scheduale).then(function (res) {\n      dispatch({\n        type: FETCH_SCEHDUALE_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var uploadImage = function uploadImage(imageData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      axios.post(\"expert/gallery/upload\", imageData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }).then(function (res) {\n        dispatch({\n          type: FETCH_Gallery_SUCCESS,\n          payload: res.data\n        });\n        resolve(res);\n      }).catch(function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n        reject(err);\n      });\n    });\n  };\n};\nexport var updateImage = function updateImage(images) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      axios.post(\"expert/gallery/update\", images).then(function (res) {\n        resolve(res);\n      }).catch(function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n        reject(err);\n      });\n    });\n  };\n};\nexport var getExpertGallery = function getExpertGallery(expertId) {\n  return function (dispatch) {\n    axios.post(\"expert/gallery\", expertId).then(function (res) {\n      dispatch({\n        type: FETCH_Gallery_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var getBankInfo = function getBankInfo() {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      dispatch({\n        type: REQUEST_USER_PROFILE\n      });\n      axios.post(\"/user/bank/info\").then(function (res) {\n        dispatch({\n          type: FETCH_BANK_SUCCESS,\n          payload: res.data\n        });\n        resolve(res);\n      }).catch(function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n        reject(err);\n      });\n    });\n  };\n};\nexport var createOrUpdateBankInfo = function createOrUpdateBankInfo(bankInfo) {\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_USER_PROFILE\n    });\n    axios.post(\"/user/bank/update\", bankInfo).then(function (res) {\n      dispatch({\n        type: FETCH_BANK_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/actions/userActions.js"],"names":["axios","GET_ERRORS","REQUEST_USER_PROFILE","FETCH_BANK_SUCCESS","FETCH_USER_SUCCESS","FETCH_SCEHDUALE_SUCCESS","FETCH_Gallery_SUCCESS","defaults","headers","common","localStorage","jwtToken","getCurrentExpert","user","dispatch","type","post","then","res","payload","data","catch","err","response","updateCurrentExpert","currentUser","Promise","resolve","reject","getExpertScheduale","expert","updateExpertScheduale","scheduale","uploadImage","imageData","updateImage","images","getExpertGallery","expertId","getBankInfo","createOrUpdateBankInfo","bankInfo"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { GET_ERRORS,REQUEST_USER_PROFILE, FETCH_BANK_SUCCESS, FETCH_USER_SUCCESS, FETCH_SCEHDUALE_SUCCESS, FETCH_Gallery_SUCCESS } from \"./types\";\n\naxios.defaults.headers.common = {\n  'Authorization': 'JWT ' + localStorage.jwtToken\n};\nexport const getCurrentExpert = user => dispatch => {\n  dispatch({\n    type:REQUEST_USER_PROFILE\n})\n    axios\n      .post(\"/current\", user )\n      .then(res => {\n        dispatch({\n            type: FETCH_USER_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\nexport const updateCurrentExpert = currentUser => dispatch => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"current/update\", currentUser)\n      .then(res => {\n        dispatch({\n            type: FETCH_USER_SUCCESS,\n            payload: res.data\n        });\n        resolve(res)\n      })\n      .catch(err => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n        reject(err)\n      }\n      );\n})\n};\n  export const getExpertScheduale = expert => dispatch => {\n    axios\n      .post(\"expert/scheduale\", expert)\n      .then(res => {\n        dispatch({\n            type: FETCH_SCEHDUALE_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  export const updateExpertScheduale = scheduale => dispatch => {\n    axios\n      .post(\"expert/scheduale/update\", scheduale)\n      .then(res => {\n        dispatch({\n            type: FETCH_SCEHDUALE_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  export const uploadImage = imageData => dispatch => {\n    return new Promise((resolve, reject) => {\n    axios\n      .post(\"expert/gallery/upload\", imageData,\n      { headers: { 'content-type': 'multipart/form-data' }})\n      .then(res => {\n        dispatch({\n          type: FETCH_Gallery_SUCCESS,\n          payload: res.data\n        });\n        resolve(res)\n      })\n      .catch(err => {   \n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n        reject(err)\n      }  \n      );\n  });\n}\n  export const updateImage = images => dispatch => {\n    return new Promise((resolve, reject) => {\n    axios\n      .post(\"expert/gallery/update\", images)\n      .then(res => {\n       resolve(res);\n      })\n      .catch(err => {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n        reject(err)\n      }\n      );\n  })\n};\n  export const getExpertGallery = expertId => dispatch => {\n    axios\n      .post(\"expert/gallery\", expertId)\n      .then(res => {\n        dispatch({\n            type: FETCH_Gallery_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  export const getBankInfo = () => dispatch => {\n    return new Promise((resolve, reject) => {\n    dispatch({\n      type:REQUEST_USER_PROFILE\n  })\n      axios\n        .post(\"/user/bank/info\" )\n        .then(res => {\n          dispatch({\n              type: FETCH_BANK_SUCCESS,\n              payload: res.data\n          });\n          resolve(res);\n        })\n        .catch(err => {\n          dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n          })\n          reject(err);\n        }\n        );\n  })}\n    export const createOrUpdateBankInfo = (bankInfo) => dispatch => {\n      dispatch({\n        type:REQUEST_USER_PROFILE\n    })\n        axios\n          .post(\"/user/bank/update\", bankInfo )\n          .then(res => {\n            dispatch({\n                type: FETCH_BANK_SUCCESS,\n                payload: res.data\n            });\n          })\n          .catch(err =>\n            dispatch({\n              type: GET_ERRORS,\n              payload: err.response.data\n            })\n          );\n      };\n"]},"metadata":{},"sourceType":"module"}