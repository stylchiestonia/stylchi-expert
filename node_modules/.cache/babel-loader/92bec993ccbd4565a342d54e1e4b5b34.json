{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING, USER_REGISTERED } from \"./types\";\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_LOADING\n    });\n    axios.post(\"/register\", userData).then(dispatch(setCurrentUser({\n      type: USER_REGISTERED\n    }))).then(history.push(\"/thank-you\")).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_LOADING\n    });\n    axios.post(\"/expert/login\", userData).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      localStorage.setItem(\"userId\", decoded.id);\n      localStorage.setItem(\"userRole\", decoded.role);\n      localStorage.setItem(\"userEmail\", decoded.email);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"userEmail\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","USER_REGISTERED","registerUser","userData","history","dispatch","type","post","then","setCurrentUser","push","catch","err","payload","response","data","loginUser","res","token","localStorage","setItem","decoded","id","role","email","setUserLoading","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING, USER_REGISTERED} from \"./types\";\n\n\nexport const registerUser = (userData, history) => dispatch => {\n  dispatch({\n    type: USER_LOADING\n})\n  axios\n    .post(\"/register\", userData)\n    .then(\n      dispatch(setCurrentUser({\n        type: USER_REGISTERED\n      })\n      )).then(\n        history.push(\"/thank-you\")\n      ).catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  dispatch({\n    type: USER_LOADING\n})\n  axios\n    .post(\"/expert/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      localStorage.setItem(\"userId\", decoded.id);\n      localStorage.setItem(\"userRole\", decoded.role);\n      localStorage.setItem(\"userEmail\", decoded.email);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"userRole\");\n  localStorage.removeItem(\"userEmail\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}