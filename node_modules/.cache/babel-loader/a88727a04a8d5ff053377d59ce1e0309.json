{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, FETCH_BOOKINGS_REQUEST, FETCH_BOOKINGS_SUCCESS, SET_BOOKING_PAST_VIEW, SET_BOOKING_UPCOMING_VIEW, SET_BOOKING_PENDING_VIEW } from \"./types\";\nexport var getBookings = function getBookings(bookingData) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_BOOKINGS_REQUEST\n    });\n    axios.post(\"http://localhost:5000/api/expert/bookings\", bookingData).then(function (res) {\n      dispatch({\n        type: FETCH_BOOKINGS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var updateBooking = function updateBooking(bookingData) {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_BOOKINGS_REQUEST\n    });\n    axios.post(\"http://localhost:5000/api/expert/bookings/update\", bookingData).then(function (res) {\n      dispatch({\n        type: FETCH_BOOKINGS_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var bookingView = function bookingView(view) {\n  return function (dispatch) {\n    if (view === 'pending') {\n      dispatch({\n        type: SET_BOOKING_PENDING_VIEW,\n        payload: view\n      });\n    } else if (view === 'upcoming') {\n      dispatch({\n        type: SET_BOOKING_UPCOMING_VIEW,\n        payload: view\n      });\n    } else if (view === 'past') {\n      dispatch({\n        type: SET_BOOKING_PAST_VIEW,\n        payload: view\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/actions/bookingActions.js"],"names":["axios","GET_ERRORS","FETCH_BOOKINGS_REQUEST","FETCH_BOOKINGS_SUCCESS","SET_BOOKING_PAST_VIEW","SET_BOOKING_UPCOMING_VIEW","SET_BOOKING_PENDING_VIEW","getBookings","bookingData","dispatch","type","post","then","res","payload","data","catch","err","response","updateBooking","bookingView","view"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,sBAArB,EAA6CC,sBAA7C,EAAqEC,qBAArE,EAA4FC,yBAA5F,EAAuHC,wBAAvH,QAAsJ,SAAtJ;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,WAAW;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAClDA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR;AADA,KAAD,CAAR;AAGAF,IAAAA,KAAK,CACFW,IADH,CACQ,2CADR,EACqDH,WADrD,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXJ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEP,sBADD;AAELW,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRR,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,UADC;AAEPa,QAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFf,OAAD,CADA;AAAA,KARZ;AAcD,GAlBmC;AAAA,CAA/B;AAmBP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAX,WAAW;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACpDA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR;AADA,KAAD,CAAR;AAGAF,IAAAA,KAAK,CACFW,IADH,CACQ,kDADR,EAC4DH,WAD5D,EAEGI,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXJ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEP,sBADD;AAELW,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,OAAD,CAAR;AAIH,KAPD,EAQGC,KARH,CAQS,UAAAC,GAAG;AAAA,aACRR,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,UADC;AAEPa,QAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFf,OAAD,CADA;AAAA,KARZ;AAcD,GAlBqC;AAAA,CAAjC;AAoBP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAI,UAAAZ,QAAQ,EAAI;AAC3C,QAAIY,IAAI,KAAK,SAAb,EAAuB;AACnBZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,wBADD;AAELQ,QAAAA,OAAO,EAAEO;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO,IAAIA,IAAI,KAAK,UAAb,EAAyB;AAC5BZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,yBADD;AAELS,QAAAA,OAAO,EAAEO;AAFJ,OAAD,CAAR;AAIH,KALM,MAKA,IAAIA,IAAI,KAAK,MAAb,EAAqB;AACxBZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,qBADD;AAELU,QAAAA,OAAO,EAAEO;AAFJ,OAAD,CAAR;AAIH;AAEJ,GAlB8B;AAAA,CAAxB","sourcesContent":["import axios from \"axios\"\nimport { GET_ERRORS, FETCH_BOOKINGS_REQUEST, FETCH_BOOKINGS_SUCCESS, SET_BOOKING_PAST_VIEW, SET_BOOKING_UPCOMING_VIEW, SET_BOOKING_PENDING_VIEW} from \"./types\";\n\nexport const getBookings = bookingData => dispatch => {\n    dispatch({\n        type:FETCH_BOOKINGS_REQUEST\n    })\n    axios\n      .post(\"http://localhost:5000/api/expert/bookings\", bookingData)\n      .then(res => {\n        dispatch({\n            type: FETCH_BOOKINGS_SUCCESS,\n            payload: res.data\n        });\n      })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\nexport const updateBooking = bookingData => dispatch => {\n    dispatch({\n        type:FETCH_BOOKINGS_REQUEST\n    })\n    axios\n      .post(\"http://localhost:5000/api/expert/bookings/update\", bookingData)\n      .then(res => {\n        dispatch({\n            type: FETCH_BOOKINGS_SUCCESS,\n            payload: res.data\n        });\n    })\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n\nexport const bookingView = view => dispatch => {\n    if (view === 'pending'){\n        dispatch({\n            type: SET_BOOKING_PENDING_VIEW,\n            payload: view\n        });\n    } else if (view === 'upcoming') {\n        dispatch({\n            type: SET_BOOKING_UPCOMING_VIEW,\n            payload: view\n        });\n    } else if (view === 'past') {\n        dispatch({\n            type: SET_BOOKING_PAST_VIEW,\n            payload: view\n        });\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}