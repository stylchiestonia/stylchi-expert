{"ast":null,"code":"var _jsxFileName = \"/Users/mahnoorfatima/Documents/admin/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport store from 'store';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from 'private-route/PrivateRoute';\nimport AdminLayout from 'layouts/Admin/Admin.js';\nimport AuthLayout from 'layouts/Auth/Auth.js';\nimport 'assets/scss/black-dashboard-react.scss';\nimport 'assets/css/nucleo-icons.css';\nimport 'react-datetime/css/react-datetime.css';\nvar hist = createBrowserHistory();\naxios.defaults.baseURL = 'http://localhost:9000/.netlify/functions/app'; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  var token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  var decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  var currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = './auth/login';\n  }\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  history: hist,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/auth/login\",\n  component: AuthLayout,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(PrivateRoute, {\n  path: \"/\",\n  component: AdminLayout,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(PrivateRoute, {\n  path: \"/admin\",\n  component: AdminLayout,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n})))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/mahnoorfatima/Documents/admin/src/index.js"],"names":["React","ReactDOM","Router","Route","Switch","Provider","createBrowserHistory","store","jwt_decode","axios","setCurrentUser","logoutUser","setAuthToken","PrivateRoute","AdminLayout","AuthLayout","hist","defaults","baseURL","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAGA,OAAO,wCAAP;AACA,OAAO,6BAAP;AACA,OAAO,uCAAP;AAEA,IAAMC,IAAI,GAAGV,oBAAoB,EAAjC;AACAG,KAAK,CAACQ,QAAN,CAAeC,OAAf,GAAyB,8CAAzB,C,CACA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,MAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAR,EAAAA,YAAY,CAACS,KAAD,CAAZ,CAHyB,CAIzB;;AACA,MAAMC,OAAO,GAAGd,UAAU,CAACa,KAAD,CAA1B,CALyB,CAMzB;;AACAd,EAAAA,KAAK,CAACgB,QAAN,CAAeb,cAAc,CAACY,OAAD,CAA7B,EAPyB,CAQzB;;AACA,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAjB,IAAAA,KAAK,CAACgB,QAAN,CAAeZ,UAAU,EAAzB,EAF6B,CAI7B;;AACAiB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AACD;AACF;;AACD7B,QAAQ,CAAC8B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAExB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAES,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,aAAZ;AAA0B,EAAA,SAAS,EAAED,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,GAAnB;AAAuB,EAAA,SAAS,EAAED,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,eAEE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,QAAnB;AAA4B,EAAA,SAAS,EAAEA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAFF,CADF,CADF,EAUEkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\n\nimport store from 'store';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\n\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from 'private-route/PrivateRoute';\n\nimport AdminLayout from 'layouts/Admin/Admin.js';\nimport AuthLayout from 'layouts/Auth/Auth.js';\n\n\nimport 'assets/scss/black-dashboard-react.scss';\nimport 'assets/css/nucleo-icons.css';\nimport 'react-datetime/css/react-datetime.css';\n\nconst hist = createBrowserHistory();\naxios.defaults.baseURL = 'http://localhost:9000/.netlify/functions/app'\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = './auth/login';\n  }\n}\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={hist}>\n      <Route path='/auth/login' component={AuthLayout} />\n      <Switch>\n      <PrivateRoute path='/' component={AdminLayout} />\n        <PrivateRoute path='/admin' component={AdminLayout} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}