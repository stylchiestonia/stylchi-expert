diff --git a/examples/App.jsx b/examples/App.jsx
index 449a7a7..1cbddba 100644
--- a/examples/App.jsx
+++ b/examples/App.jsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import {Label} from 'react-bootstrap';
+import {Label, Panel, Button} from 'react-bootstrap';
 import Editable from '../libs/js/Editable';
 import CustomComponent from './CustomComponent';
 import './styles/plugin.css';
@@ -7,215 +7,493 @@ import './styles/demo.css';
 import '../libs/css/editable.css';
 
 export default class App extends Component {
-    render(){
-      return(
-        <div className="demo">
-            <h1>React X-editable Demo</h1>
-            <hr/>
-            <h2>Example</h2>
-            <b>Popup Mode: </b>(click to edit)
-            <table id="user" className="table table-bordered table-striped">
-                <tbody>
-                    <tr>
-                        <td width="35%">Simple text field</td>
-                        <td width="65%">
-                            <Editable
-                              name="username"
-                              dataType="text"
-                              mode="popup"
-                              title="Please enter username"
-                              value={"ni3galave"}
-                              placement="right"
-                              showButtons={true}
-                            />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Empty text field, required</td>
-                        <td>
-                          <Editable
+  constructor(){
+    super();
+    this.state = {
+      simpleTextField : false,
+      emptyRequiredTextField : false,
+      simpleTexareatField : false,
+      simpleSelectCustomDisp : false,
+      simpleCheckboxlist : false,
+      customComponent : false,
+      simpleTextWithDisabled : false,
+      simpleTextFieldInline : false,
+      emptyRequiredTextFieldInline : false,
+      simpleTexareatFieldInline : false,
+      simpleSelectCustomDispInline : false,
+      simpleCheckboxlistInline : false,
+      customComponentInline : false,
+    }
+  }
+  render(){
+    return(
+      <div className="demo">
+          <h1>React X-editable Demo</h1>
+          <hr/>
+          <h2>Example</h2>
+          <b>Popup Mode: </b>(click to edit)
+          <table id="user" className="table table-bordered table-striped">
+            <thead>
+              <tr>
+                <th>Type</th>
+                <th>Example</th>
+                <th>
+                  <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> {
+                    const { simpleTextField, emptyRequiredTextField, simpleTexareatField,
+                      simpleSelectCustomDisp, simpleCheckboxlist, customComponent, simpleTextWithDisabled,
+                      simpleTextFieldInline, emptyRequiredTextFieldInline,  simpleTexareatFieldInline,
+                      simpleSelectCustomDispInline, simpleCheckboxlistInline, customComponentInline } = this.state;
+                    this.setState({
+                      simpleTextField : !simpleTextField,
+                      emptyRequiredTextField : !emptyRequiredTextField,
+                      simpleTexareatField : !simpleTexareatField,
+                      simpleSelectCustomDisp : !simpleSelectCustomDisp,
+                      simpleCheckboxlist : !simpleCheckboxlist,
+                      customComponent : !customComponent,
+                      simpleTextWithDisabled : !simpleTextWithDisabled,
+                      simpleTextFieldInline : !simpleTextFieldInline,
+                      emptyRequiredTextFieldInline : !emptyRequiredTextFieldInline,
+                      simpleTexareatFieldInline : !simpleTexareatFieldInline,
+                      simpleSelectCustomDispInline : !simpleSelectCustomDispInline,
+                      simpleCheckboxlistInline : !simpleCheckboxlistInline,
+                      customComponentInline : !customComponentInline
+                    })
+                  }
+                  }>
+                    Show / Hide All
+                  </Button>
+                </th>
+              </tr>
+           </thead>
+              <tbody>
+                  <tr>
+                      <td width="35%">Simple text field</td>
+                      <td width="65%">
+                        <Editable
                             name="username"
                             dataType="text"
-                            mode={"popup"}
-                            title="Enter username"
+                            mode="popup"
+                            title="Please enter username"
+                            value={"ni3galave"}
                             placement="right"
                             showButtons={true}
-                            validate={(value) => {
-                              if(!value){
-                                return 'Required';
-                              }
-                            }}
                           />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Simple textarea</td>
-                        <td>
-                          <Editable
-                              name="description"
-                              dataType="textarea"
-                              mode={"popup"}
-                              title="Enter description"
-                              placement="right"
-                              showButtons={true}
-                            />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Simple select with customizable display</td>
-                        <td>
-                          <Editable
+                        <Panel collapsible expanded={this.state.simpleTextField} >
+                          <pre> {`<Editable
+    name="username"
+    dataType="text"
+    mode="popup"
+    title="Please enter username"
+    value={"ni3galave"}
+    placement="right"
+    showButtons={true}
+  />`}</pre>
+
+                        </Panel>
+                      </td>
+                      <td width="65%">
+                         <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleTextField: !this.state.simpleTextField })}>
+                           Show code
+                         </Button>
+                      </td>
+
+                  </tr>
+                  <tr>
+                      <td>Empty text field, required</td>
+                      <td>
+                        <Editable
+                          name="usernameRequired"
+                          dataType="text"
+                          mode={"popup"}
+                          title="Enter username"
+                          placement="right"
+                          showButtons={true}
+                          validate={(value) => {
+                            if(!value){
+                              return 'Required';
+                            }
+                          }}
+                        />
+                      <Panel collapsible expanded={this.state.emptyRequiredTextField} >
+                          <pre> {`<Editable
+    name="username"
+    dataType="text"
+    mode={"popup"}
+    title="Enter username"
+    placement="right"
+    showButtons={true}
+    validate={(value) => {
+      if(!value){
+        return 'Required';
+      }
+    }}
+/>`}</pre>
 
-                            dataType="select"
-                            name={"city"}
+                        </Panel>
+                      </td>
+                      <td width="65%">
+                         <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ emptyRequiredTextField: !this.state.emptyRequiredTextField })}>
+                           Show code
+                         </Button>
+                      </td>
+                  </tr>
+                  <tr>
+                      <td>Simple textarea</td>
+                      <td>
+                        <Editable
+                            name="description"
+                            dataType="textarea"
                             mode={"popup"}
-                            value={2}
-                            title="Please select city"
+                            title="Enter description"
                             placement="right"
                             showButtons={true}
-                            options={[
-                              {value : 1, text: "Mumbai"},
-                              {value : 2, text: "Pune"},
-                              {value : 3, text: "Nashik"}
-                            ]}
-                            display={function(value){
-                              return (<span><Label bsStyle="default">City:</Label><span>&nbsp;{value}</span></span>);
-                            }}
-                            />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Simple checkbox list</td>
-                        <td>
-                          <Editable
-                            name="check"
-                            dataType="checklist"
-                            title="Please select city"
-                            mode={"popup"}
-                            optionsInline={false}
-                            value={["Nashik","Mumbai"]}
-                            options={[
-                              {value : 1, text: "Mumbai"},
-                              {value : 2, text: "Pune"},
-                              {value : 3, text: "Nashik"}
-                            ]}
                           />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td width="35%">Custom component</td>
-                        <td width="65%">
-                          <Editable
-                            name="address"
-                            dataType="custom"
-                            mode="popup"
-                            title="Please enter address"
-                            customComponent={(props, state) =>{
-                              return( <CustomComponent {...props} {...state}/> );
-                            }}
+                        <Panel collapsible expanded={this.state.simpleTexareatField} >
+                              <pre> {`<Editable
+    name="description"
+    dataType="textarea"
+    mode={"popup"}
+    title="Enter description"
+    placement="right"
+    showButtons={true}
+/>`}</pre>
+
+                            </Panel>
+                          </td>
+                          <td width="65%">
+                             <Button bsStyle="link"  bsSize="xsmall" onClick={ ()=> this.setState({ simpleTexareatField: !this.state.simpleTexareatField })}>
+                               Show code
+                             </Button>
+                          </td>
+                  </tr>
+                  <tr>
+                      <td>Simple select with customizable display</td>
+                      <td>
+                        <Editable
+
+                          dataType="select"
+                          name={"city"}
+                          mode={"popup"}
+                          value={2}
+                          title="Please select city"
+                          placement="right"
+                          showButtons={true}
+                          options={[
+                            {value : 1, text: "Mumbai"},
+                            {value : 2, text: "Pune"},
+                            {value : 3, text: "Nashik"}
+                          ]}
+                          display={function(value){
+                            return (<span><Label bsStyle="default">City:</Label><span>&nbsp;{value}</span></span>);
+                          }}
                           />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td width="35%">Simple text field with disable</td>
-                        <td width="65%">
-                            <Editable
-                              name="username"
-                              dataType="text"
-                              mode={"inline"}
-                              title="Enter username"
-                              placement="right"
-                              value="ni3galave"
-                              showButtons={true}
-                              disabled={true}
-                            />
-                        </td>
-                    </tr>
-                </tbody>
-            </table>
-            <br/>
-            <b>Inline mode: </b>
-            <table id="user" className="table table-bordered table-striped">
-                <tbody>
-                    <tr>
-                        <td width="35%">Simple text field</td>
-                        <td width="65%">
-                            <Editable
-                              name="username"
-                              dataType="text"
-                              mode={"inline"}
-                              title="Enter username"
-                              value="ni3galave"
-                            />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Empty text field, required with no buttons</td>
-                        <td>
+                        <Panel collapsible expanded={this.state.simpleSelectCustomDisp} >
+                                <pre> {`<Editable
+    dataType="select"
+    name={"city"}
+    mode={"popup"}
+    value={2}
+    title="Please select city"
+    placement="right"
+    showButtons={true}
+    options={[
+      {value : 1, text: "Mumbai"},
+      {value : 2, text: "Pune"},
+      {value : 3, text: "Nashik"}
+    ]}
+    display={function(value){
+      return (<span><Label bsStyle="default">City:</Label><span>&nbsp;{value}</span></span>);
+    }}
+/>`}</pre>
+
+                              </Panel>
+                            </td>
+                            <td width="65%">
+                               <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleSelectCustomDisp: !this.state.simpleSelectCustomDisp })}>
+                                 Show code
+                               </Button>
+                            </td>
+                  </tr>
+                  <tr>
+                      <td>Simple checkbox list</td>
+                      <td>
+                        <Editable
+                          name="check"
+                          dataType="checklist"
+                          title="Please select city"
+                          mode={"popup"}
+                          optionsInline={false}
+                          value={["Nashik","Mumbai"]}
+                          options={[
+                            {value : 1, text: "Mumbai"},
+                            {value : 2, text: "Pune"},
+                            {value : 3, text: "Nashik"}
+                          ]}
+                        />
+                      <Panel collapsible expanded={this.state.simpleCheckboxlist} >
+                                <pre> {`<Editable
+    name="check"
+    dataType="checklist"
+    title="Please select city"
+    mode={"popup"}
+    optionsInline={false}
+    value={["Nashik","Mumbai"]}
+    options={[
+      {value : 1, text: "Mumbai"},
+      {value : 2, text: "Pune"},
+      {value : 3, text: "Nashik"}
+    ]}
+/>`}</pre>
+
+                              </Panel>
+                            </td>
+                            <td width="65%">
+                               <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleCheckboxlist: !this.state.simpleCheckboxlist })}>
+                                 Show code
+                               </Button>
+                            </td>
+                  </tr>
+                  <tr>
+                      <td width="35%">Custom component</td>
+                      <td width="65%">
+                        <Editable
+                          name="address"
+                          dataType="custom"
+                          mode="popup"
+                          title="Please enter address"
+                          customComponent={(props, state) =>{
+                            return( <CustomComponent {...props} {...state}/> );
+                          }}
+                        />
+                      <Panel collapsible expanded={this.state.customComponent} >
+                                  <pre> {`<Editable
+    name="address"
+    dataType="custom"
+    mode="popup"
+    title="Please enter address"
+    customComponent={(props, state) =>{
+      return( <CustomComponent {...props} {...state}/> );
+    }}
+/>`}</pre>
+
+                                </Panel>
+                              </td>
+                              <td width="65%">
+                                 <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ customComponent: !this.state.customComponent })}>
+                                   Show code
+                                 </Button>
+                              </td>
+                  </tr>
+                  <tr>
+                      <td width="35%">Simple text field with disable</td>
+                      <td width="65%">
                           <Editable
-                            name="username"
+                            name="usernameaa"
                             dataType="text"
+                            mode={"popup"}
                             title="Enter username"
-                            showButtons={false}
-                            validate={(value) => {
-                              if(!value){
-                                return 'Required';
-                              }
-                            }}
+                            placement="right"
+                            value="ni3galave"
+                            showButtons={true}
+                            disabled={false}
                           />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Simple textarea</td>
-                        <td>
-                          <Editable
-                              name="description"
-                              dataType="textarea"
-                              value="X editable using react bootstrap"
-                              title="Enter description"
-                            />
-                        </td>
-                    </tr>
-                    <tr>
-                        <td>Simple select with customizable display</td>
-                        <td>
+                        <Panel collapsible expanded={this.state.simpleTextWithDisabled} >
+                                      <pre> {`<Editable
+    name="username"
+    dataType="text"
+    mode={"inline"}
+    title="Enter username"
+    placement="right"
+    value="ni3galave"
+    showButtons={true}
+    disabled={true}
+/>`}</pre>
+
+                                    </Panel>
+                                  </td>
+                                  <td width="65%">
+                                     <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleTextWithDisabled: !this.state.simpleTextWithDisabled })}>
+                                       Show code
+                                     </Button>
+
+                                  </td>
+                  </tr>
+              </tbody>
+          </table>
+          <br/>
+          <b>Inline mode: </b>
+          <table id="user" className="table table-bordered table-striped">
+              <tbody>
+                  <tr>
+                      <td width="35%">Simple text field</td>
+                      <td width="65%">
                           <Editable
-                            dataType="select"
-                            name={"city"}
-                            value={1}
-                            title="Please select city"
-                            options={[
-                              {value : 1, text: "Mumbai"},
-                              {value : 2, text: "Pune"},
-                              {value : 3, text: "Nashik"}
-                            ]}
-                            display={function(value){
-                              return (<span>City: <b>{value}</b></span>);
-                            }}
-                            />
+                            name="usernameDD"
+                            dataType="text"
+                            mode={"inline"}
+                            title="Enter username"
+                            value="ni3galave"
+                          />
+                        <Panel collapsible expanded={this.state.simpleTextFieldInline} >
+                                        <pre> {`<Editable
+    name="username"
+    dataType="text"
+    mode={"inline"}
+    title="Enter username"
+    value="ni3galave"
+/>`}</pre>
+
+                                      </Panel>
+                                    </td>
+                          <td width="65%">
+                             <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleTextFieldInline: !this.state.simpleTextFieldInline })}>
+                               Show code
+                             </Button>
+                          </td>
+                  </tr>
+                  <tr>
+                      <td>Empty text field, required with no buttons</td>
+                      <td>
+                        <Editable
+                          name="usernameInline"
+                          dataType="text"
+                          title="Enter username"
+                          showButtons={false}
+                          validate={(value) => {
+                            if(!value){
+                              return 'Required';
+                            }
+                          }}
+                        />
+                      <Panel collapsible expanded={this.state.emptyRequiredTextFieldInline} >
+                                        <pre> {`<Editable
+    name="username"
+    dataType="text"
+    title="Enter username"
+    showButtons={false}
+    validate={(value) => {
+      if(!value){
+        return 'Required';
+      }
+    }}
+/>`}</pre>
+
+                                      </Panel>
+                                    </td>
+                          <td width="65%">
+                             <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ emptyRequiredTextFieldInline: !this.state.emptyRequiredTextFieldInline })}>
+                               Show code
+                             </Button>
+                          </td>
+                  </tr>
+                  <tr>
+                      <td>Simple textarea</td>
+                      <td>
+                        <Editable
+                            name="descriptioInlinen"
+                            dataType="textarea"
+                            value="X editable using react bootstrap"
+                            title="Enter description"
+                          />
+                        <Panel collapsible expanded={this.state.simpleTexareatFieldInline} >
+                                            <pre> {`<Editable
+    name="description"
+    dataType="textarea"
+    value="X editable using react bootstrap"
+    title="Enter description"
+/>`}</pre>
+
+                                          </Panel>
+                                        </td>
+                            <td width="65%">
+                               <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleTexareatFieldInline: !this.state.simpleTexareatFieldInline })}>
+                                 Show code
+                               </Button>
+                            </td>
+                  </tr>
+                  <tr>
+                      <td>Simple select with customizable display</td>
+                      <td>
+                        <Editable
+                          dataType="select"
+                          name={"cityInline"}
+                          value={1}
+                          title="Please select city"
+                          options={[
+                            {value : 1, text: "Mumbai"},
+                            {value : 2, text: "Pune"},
+                            {value : 3, text: "Nashik"}
+                          ]}
+                          display={function(value){
+                            return (<span>City: <b>{value}</b></span>);
+                          }}
+                          />
+                        <Panel collapsible expanded={this.state.simpleSelectCustomDispInline} >
+                                              <pre> {`<Editable
+    dataType="select"
+    name={"city"}
+    value={1}
+    title="Please select city"
+    options={[
+      {value : 1, text: "Mumbai"},
+      {value : 2, text: "Pune"},
+      {value : 3, text: "Nashik"}
+    ]}
+    display={function(value){
+      return (<span>City: <b>{value}</b></span>);
+    }}
+/>`}</pre>
+
+                            </Panel>
+                          </td>
+                          <td width="65%">
+                             <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ simpleSelectCustomDispInline: !this.state.simpleSelectCustomDispInline })}>
+                               Show code
+                             </Button>
+                          </td>
+                  </tr>
+                  <tr>
+                      <td width="35%">Custom component</td>
+                      <td width="65%">
+                        <Editable
+                          name="addressInline"
+                          dataType="custom"
+                          mode="inline"
+                          title="Please enter address"
+                          value={{city:'Mumbai',street:'LBS road',building: '202/12 Budha vihar'}}
+                          customComponent={(props, state) =>{
+                            return( <CustomComponent {...props} {...state}/> );
+                          }}
+                          display={function(value){
+                            return (<span><b>{value.city}</b>, {value.street}, {value.building}</span>);
+                          }}
+                        />
+                      <Panel collapsible expanded={this.state.customComponentInline} >
+                                              <pre> {`<Editable
+    name="address"
+    dataType="custom"
+    mode="inline"
+    title="Please enter address"
+    value={{city:'Mumbai',street:'LBS road',building: '202/12 Budha vihar'}}
+    customComponent={(props, state) =>{
+      return( <CustomComponent {...props} {...state}/> );
+    }}
+    display={function(value){
+      return (<span><b>{value.city}</b>, {value.street}, {value.building}</span>);
+    }}
+/>`}</pre>
+
+                          </Panel>
                         </td>
-                    </tr>
-                    <tr>
-                        <td width="35%">Custom component</td>
                         <td width="65%">
-                          <Editable
-                            name="address"
-                            dataType="custom"
-                            mode="inline"
-                            title="Please enter address"
-                            value={{city:'Mumbai',street:'LBS road',building: '202/12 Budha vihar'}}
-                            customComponent={(props, state) =>{
-                              return( <CustomComponent {...props} {...state}/> );
-                            }}
-                            display={function(value){
-                              return (<span><b>{value.city}</b>, {value.street}, {value.building}</span>);
-                            }}
-                          />
+                          <Button bsStyle="link" bsSize="xsmall" onClick={ ()=> this.setState({ customComponentInline: !this.state.customComponentInline })}>
+                             Show code
+                           </Button>
                         </td>
-                    </tr>
-                </tbody>
-            </table>
-        </div>
-      )
-    }
+                  </tr>
+              </tbody>
+          </table>
+      </div>
+    )
+  }
 }
diff --git a/examples/index.jsx b/examples/index.jsx
index 586d55f..2f48d09 100644
--- a/examples/index.jsx
+++ b/examples/index.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import { render } from 'react-dom';
-import App from './App'
+import App from './App';
+import Dummy from './dummy'
 
 
-render(<App/>, document.getElementById('app'));
+render(<Dummy />, document.getElementById('app'));
diff --git a/examples/styles/demo.css b/examples/styles/demo.css
index 1f3bb82..74afe04 100644
--- a/examples/styles/demo.css
+++ b/examples/styles/demo.css
@@ -5,3 +5,8 @@
 .demo table {
   clear: both;
 }
+
+.panel.panel-default {
+    margin-bottom: 0px !important;
+    border: white !important;
+}
diff --git a/libs/js/Checklist.jsx b/libs/js/Checklist.jsx
index 8081e8a..88f7a9c 100644
--- a/libs/js/Checklist.jsx
+++ b/libs/js/Checklist.jsx
@@ -35,7 +35,7 @@ export default class Checklist extends Component {
     }
     this.setState({ value : values});
     const texts = _.map(values, (val) => { return val.text})
-    this.props.setValueToAnchor(texts);
+    this.props.setValueToAnchor(texts, e);
 
   }
   onBlur(e){
diff --git a/libs/js/Editable.jsx b/libs/js/Editable.jsx
index 39212c7..f63d447 100644
--- a/libs/js/Editable.jsx
+++ b/libs/js/Editable.jsx
@@ -9,7 +9,7 @@ import {
   FormGroup,
   ControlLabel,
   FormControl,
-  HelpBlock
+  HelpBlock,OverlayTrigger
 } from 'react-bootstrap';
 
 import Text from './Text';
@@ -42,6 +42,7 @@ export default class Editable extends Component {
         optionsInline : props.inline ? props.inline : false,
         //Required for customize input
         customComponent :props.customComponent ? props.customComponent : null,
+        onChange : props.onChange ?  props.onChange : null,
         //for internal use
         editable: false,
         valueUpdated : false,
@@ -99,8 +100,12 @@ export default class Editable extends Component {
     //reset validation
     this.validation = {};
   }
-  setValueToAnchor(value){
+  setValueToAnchor(value, e){
     this.newValue = value;
+    //To trigger onChange event:user defined
+    if(this.props.onChange){
+      this.props.onChange(e);
+    }
   }
   getValueForAnchor(){
     if(this.value){
@@ -158,7 +163,7 @@ export default class Editable extends Component {
       validation: this.validation,
     };
     const content = [];
-    if (editable) {
+    // if (editable) {
       switch (dataType) {
         case 'text':
           content.push(<Text {...componetProps} {...this.state} />);
@@ -180,35 +185,50 @@ export default class Editable extends Component {
 
       }
 
-      content.push(this.getButtons());
+      // content.push(this.getButtons());
       if(mode == 'popup'){
+
         return (
-          <div>
+
             <Overlay
+                key={"Overlay-"+this.props.name}
                 rootClose={true}
                 onHide={() => { this.setEditable(false) } }
                 show={editable}
-                target={() => ReactDOM.findDOMNode(this.editableAnchor)}
+                target={() => {
+                  console.log("sdsdsssssssssssssssssssssssssssssssssssss")
+                  console.log(this.refs.target)
+                  return this.refs.target.getDOMNode()
+                }}
+                shouldUpdatePosition={true}
+                container={this}
                 {...this.props}>
-              <Popover id={"popover-positioned-"+placement} title={title} key={this.props.name}>
+              <Popover id={"popover-positioned-"+this.props.name} title={title} key={"popover-"+this.props.name}>
                 {content}
               </Popover>
             </Overlay>
-          </div>
+
         );
       }
       return content;
-    }
+    // }
+  }
+  componentDidUpdate(){
+    console.log("=============================ComponentDidUpdate")
+    console.log(this.refs)
   }
 
   render() {
     const { editable, title, validate, showButtons,
             defaultValue, dataType, mode, disabled } = this.state;
     const editableContainerClass = (disabled) ? "editable-disabled" : "editable-container";
+    console.log(this.props.name);
+    console.log("=============================Render")
+    console.log(this.getContent());
     return (
-      <div className={editableContainerClass} key={this.props.name}>
+      <div className={editableContainerClass} key={"container-"+this.props.name}>
         { !(mode == 'inline' && editable)
-            ? (<a ref={ref => this.editableAnchor = ref}
+            ? (<a ref={"target"}
                   onClick={this.setEditable.bind(this, true)}
                   href="javascript:;"
                 >
@@ -218,6 +238,7 @@ export default class Editable extends Component {
             : null
         }
         {this.getContent()}
+
       </div>
     );
   }
diff --git a/libs/js/Select.jsx b/libs/js/Select.jsx
index 09a9c6d..0377e0e 100644
--- a/libs/js/Select.jsx
+++ b/libs/js/Select.jsx
@@ -30,7 +30,7 @@ export default class Select extends Component {
       this.props.setValueToAnchor(undefined);
       return;
     }
-    this.props.setValueToAnchor(option.text);
+    this.props.setValueToAnchor(option.text, e);
   }
   onBlur(e){
     if( !this.props.showButtons ){
@@ -63,7 +63,7 @@ export default class Select extends Component {
                 componentClass="select"
                 placeholder="select"
                 bsSize="small"
-                key={this.props.name}
+                key={"FormControl"+this.props.name}
                 value={ this.getValue() }
                 onChange={this.setValue.bind(this)}
                 onBlur={this.onBlur.bind(this)}
diff --git a/libs/js/Text.jsx b/libs/js/Text.jsx
index 51f1885..212e102 100644
--- a/libs/js/Text.jsx
+++ b/libs/js/Text.jsx
@@ -16,7 +16,7 @@ export default class Text extends Component {
   }
   setValue = (e) =>{
     this.setState({ value: e.target.value });
-    this.props.setValueToAnchor(e.target.value);
+    this.props.setValueToAnchor(e.target.value, e);
   }
   onBlur(e){
     if( !this.props.showButtons ){
diff --git a/libs/js/Textarea.jsx b/libs/js/Textarea.jsx
index ef3086c..699ca0b 100644
--- a/libs/js/Textarea.jsx
+++ b/libs/js/Textarea.jsx
@@ -17,7 +17,7 @@ export default class Textarea extends Component {
   }
   setValue = (e) =>{
     this.setState({ value: e.target.value });
-    this.props.setValueToAnchor(e.target.value);
+    this.props.setValueToAnchor(e.target.value, e);
   }
   onBlur(e){
     if( !this.props.showButtons ){
diff --git a/package.json b/package.json
index beac29c..0a0d1f7 100644
--- a/package.json
+++ b/package.json
@@ -5,7 +5,7 @@
   "main": "dist/editable",
   "repository": {
     "type": "git",
-   "url": "git+https://github.com/ni3galave/react-x-editable.git"
+    "url": "git+https://github.com/ni3galave/react-x-editable.git"
   },
   "keywords": [
     "react",
@@ -26,8 +26,10 @@
     "prop-types": "^15.5.10",
     "react": "^15.4.2",
     "react-bootstrap": "^0.31.0",
+    "react-bootstrap-xeditable": "^0.2.10",
     "react-css-modules": "^4.3.0",
-    "react-dom": "^15.4.2"
+    "react-dom": "^15.4.2",
+    "react-xeditable": "^0.1.3"
   },
   "devDependencies": {
     "babel-core": "^6.23.1",
